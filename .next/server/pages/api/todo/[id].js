"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/todo/[id]";
exports.ids = ["pages/api/todo/[id]"];
exports.modules = {

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "(api)/./pages/api/todo/[id].js":
/*!********************************!*\
  !*** ./pages/api/todo/[id].js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ userHandler)\n/* harmony export */ });\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! util */ \"util\");\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(util__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\nconst delayTime = 1000; // milliseconds added to all REST calls\nconst writeFile = (0,util__WEBPACK_IMPORTED_MODULE_2__.promisify)((fs__WEBPACK_IMPORTED_MODULE_1___default().writeFile));\nconst readFile = (0,util__WEBPACK_IMPORTED_MODULE_2__.promisify)((fs__WEBPACK_IMPORTED_MODULE_1___default().readFile));\nconst delay = (ms)=>new Promise((resolve)=>setTimeout(resolve, ms));\nasync function userHandler(req, res) {\n    const method = req?.method;\n    const recordFromBody = req?.body;\n    const jsonFile = path__WEBPACK_IMPORTED_MODULE_0___default().resolve(\"./\", \"db.json\");\n    const ids = (req?.query?.id).split(\",\", 50).map((id)=>parseInt(id)); // only support 50 items max\n    const id = ids.length === 1 ? ids[0] : undefined; // likely never happen because if no value, then the URL goes to GET instead\n    async function getTodosData() {\n        const readFileData = await readFile(jsonFile);\n        return JSON.parse(readFileData).todos;\n    }\n    switch(method){\n        case \"GET\":\n            const todos = await getTodosData();\n            const rec = todos.find((rec)=>rec.id === id);\n            if (rec) {\n                res.status(200).json(rec);\n            } else {\n                res.status(404).send(\"rec not found\");\n            }\n            console.log(`GET /api/todo/${id} status: 200`);\n            break;\n        case \"PUT\":\n            try {\n                await delay(delayTime);\n                const todos1 = await getTodosData();\n                const newRecsArray = todos1.map(function(rec) {\n                    return rec.id === id ? recordFromBody : rec;\n                });\n                writeFile(jsonFile, JSON.stringify({\n                    todos: newRecsArray\n                }, null, 2));\n                res.status(200).json(recordFromBody);\n                console.log(`PUT /api/todo/${id} status: 200`);\n            } catch (e) {\n                console.log(\"/api/todo PUT error:\", e);\n            }\n            break;\n        case \"POST\":\n            try {\n                await delay(delayTime);\n                const recs = await getTodosData();\n                const newRecsArray1 = [\n                    recordFromBody,\n                    ...recs.map(function(rec) {\n                        return rec.id === id ? recordFromBody : rec;\n                    })\n                ];\n                writeFile(jsonFile, JSON.stringify({\n                    todos: newRecsArray1\n                }, null, 2));\n                res.status(200).json(recordFromBody);\n                console.log(`POST /api/todo/${id} status: 200`);\n            } catch (e1) {\n                console.log(\"/api/todo POST error:\", e1);\n            }\n            break;\n        case \"DELETE\":\n            try {\n                await delay(delayTime);\n                const todos2 = await getTodosData();\n                // allows for multiple id's to be delete using non-standard REST /api/todo/10,12,14 for 3 records\n                const newRecsArray2 = todos2.filter(function(rec) {\n                    return !ids.includes(rec.id);\n                });\n                writeFile(jsonFile, JSON.stringify({\n                    todos: newRecsArray2\n                }, null, 2));\n                res.status(200).json(recordFromBody);\n                console.log(`DELETE /api/todo/${ids.toString()} status: 200`);\n            } catch (e2) {\n                console.log(\"/api/todo DELETE error:\", e2);\n            }\n            break;\n        default:\n            res.setHeader(\"Allow\", [\n                \"GET\",\n                \"PUT\",\n                \"POST\",\n                \"DELETE\"\n            ]);\n            res.status(405).end(`Method ${method} Not Allowed`);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/todo/[id].js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/todo/[id].js"));
module.exports = __webpack_exports__;

})();